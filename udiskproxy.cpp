/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c UdiskProxy -p udiskproxy.h:udiskproxy.cpp ./interfaces/org.freedesktop.UDisks.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include <QDBusInterface>
#include <QTimer>
#include "udiskproxy.h"

/*
 * Implementation of interface class UdiskProxy
 */

UdiskProxy::UdiskProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent)
    : QDBusAbstractInterface(service, path, staticInterfaceName(), connection, parent)
{
    // Delay auto activation for a full minute since we don't really
    // need to have automount working immediately
    QTimer::singleShot(60000, this, SLOT(triggerAutoActivation()));
}


UdiskProxy::~UdiskProxy()
{
}

void UdiskProxy::triggerAutoActivation()
{
    // By directly instantiating an interface, this will result in
    // dbus auto activating the udisks-daemon process
    QDBusInterface *iface = new QDBusInterface(service(),
                                               path(),
                                               staticInterfaceName(),
                                               connection());
    delete iface;
}
